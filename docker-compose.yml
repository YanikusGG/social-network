version: "3"

services:
  api-postgresql:
    container_name: "api-postgresql"
    image: postgres:15.5
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: "postgres"
      DATABASE_NAME: "api_service"
      DATABASE_USER: "api_service"
      DATABASE_PASSWORD: "api_service"
    ports:
      - "5432:5432"
    networks:
      - social-network
    volumes:
      - ./api/configs/setup-db.sh:/docker-entrypoint-initdb.d/setup-db.sh:ro
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 5s
      retries: 5
  api-pgadmin:
    container_name: "api-pgadmin"
    image: dpage/pgadmin4
    restart: unless-stopped
    entrypoint: >
      /bin/sh -c "
      cp -f /pgadmin4/pgpass /var/lib/pgadmin/;
      chmod 600 /var/lib/pgadmin/pgpass;
      /entrypoint.sh
      "
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "8080:80"
    networks:
      - social-network
    volumes:
      - ./api/configs/servers.json:/pgadmin4/servers.json:ro
      - ./api/configs/pgpass:/pgadmin4/pgpass:ro
    depends_on:
      api-postgresql:
        condition: service_healthy
  api-migrations:
    container_name: "api-migrations"
    image: api-migrations:1.0
    build:
      context: ./api/migrations
      dockerfile: ./Dockerfile
    restart: "no"
    networks:
      - social-network
    depends_on:
      api-postgresql:
        condition: service_healthy
  api-service:
    container_name: "api-service"
    image: api-service:1.0
    build:
      context: .
      dockerfile: ./api/Dockerfile
    restart: unless-stopped
    environment:
      DATABASE_URL: "api-postgresql:5432/api_service"
      DATABASE_USER: "api_service"
      DATABASE_PASSWORD: "api_service"
      SOCIAL_ENGINE_GRPC_URL: "social-engine:51075"
    ports:
      - "8081:80"
    networks:
      - social-network
    depends_on:
      api-postgresql:
        condition: service_healthy
  social-engine-postgresql:
    container_name: "social-engine-postgresql"
    image: postgres:15.5
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: "postgres"
      DATABASE_NAME: "social_engine"
      DATABASE_USER: "social_engine"
      DATABASE_PASSWORD: "social_engine"
      PGPORT: 5433
    ports:
      - "5433:5433"
    networks:
      - social-network
    volumes:
      - ./social_engine/configs/setup-db.sh:/docker-entrypoint-initdb.d/setup-db.sh:ro
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 5s
      retries: 5
  social-engine-pgadmin:
    container_name: "social-engine-pgadmin"
    image: dpage/pgadmin4
    restart: unless-stopped
    entrypoint: >
      /bin/sh -c "
      cp -f /pgadmin4/pgpass /var/lib/pgadmin/;
      chmod 600 /var/lib/pgadmin/pgpass;
      /entrypoint.sh
      "
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "8082:80"
    networks:
      - social-network
    volumes:
      - ./social_engine/configs/servers.json:/pgadmin4/servers.json:ro
      - ./social_engine/configs/pgpass:/pgadmin4/pgpass:ro
    depends_on:
      social-engine-postgresql:
        condition: service_healthy
  social-engine-migrations:
    container_name: "social-engine-migrations"
    image: social-engine-migrations:1.0
    build:
      context: ./social_engine/migrations
      dockerfile: ./Dockerfile
    restart: "no"
    networks:
      - social-network
    depends_on:
      social-engine-postgresql:
        condition: service_healthy
  social-engine:
    container_name: "social-engine"
    image: social-engine:1.0
    build:
      context: .
      dockerfile: ./social_engine/Dockerfile
    restart: unless-stopped
    environment:
      DATABASE_URL: "social-engine-postgresql:5433/social_engine"
      DATABASE_USER: "social_engine"
      DATABASE_PASSWORD: "social_engine"
      SERVICE_PORT: 51075
      SERVICE_MAX_WORKERS_COUNT: 3
      PAGE_SIZE: 5
    ports:
      - "8083:80"
    networks:
      - social-network
    depends_on:
      social-engine-postgresql:
        condition: service_healthy

networks:
  social-network:
    name: "social-network"
